#footer-wrap
  if theme.footer.socialBar.enable
    - let centerImg = theme.footer.socialBar.centerImg ? theme.footer.socialBar.centerImg : theme.avatar.img
    - let leftInfo = theme.footer.socialBar.left
    - let rightInfo = theme.footer.socialBar.right
    #footer_deal
      each item, index in leftInfo
        a.deal_link(href=url_for(item.link) title=item.title)
          if (item.icon.startsWith("fa"))
            i(class=`${item.icon}`)
          else if (item.icon.startsWith("icon"))
            svg.icon(aria-hidden="true")
              use(xlink:href=`#`+ item.icon)
          else if (item.icon.startsWith("anzhiyu"))
            i.anzhiyufont(class=`${item.icon}`)
      img.footer_mini_logo(title="返回顶部", onclick="anzhiyu.scrollToDest(0, 500)", src=centerImg, size="50px")
      each item, index in rightInfo
        a.deal_link(href=url_for(item.link) title=item.title)
          if (item.icon.startsWith("fa"))
            i(class=`${item.icon}`)
          else if (item.icon.startsWith("icon"))
            svg.icon(aria-hidden="true")
              use(xlink:href=`#`+ item.icon)
          else if (item.icon.startsWith("anzhiyu"))
            i.anzhiyufont(class=`${item.icon}`)
  if theme.footer.list.enable
    - let projectList = theme.footer.list.project
    #anzhiyu-footer
      each item, index in projectList
        .footer-group
          .footer-title=item.title
          .footer-links
            each iten, indey in item.links
              a.footer-item(title=iten.title target="_blank" href=iten.link)=iten.title
      if theme.footer.list.randomFriends > 0
        .footer-group
          .footer-title-group
            .footer-title 友链
            a.random-friends-btn#footer-random-friends-btn(href="javascript:addFriendLinksInFooter();" title="换一批友情链接")
              i.anzhiyufont.anzhiyu-icon-arrow-rotate-right
          .footer-links#friend-links-in-footer

  if theme.footer.owner.enable && !theme.footer.footerBar.enable
    - var now = new Date()
    - var nowYear = now.getFullYear()
    if theme.footer.owner.since && theme.footer.owner.since != nowYear
      .copyright!= `&copy;${theme.footer.owner.since} - ${nowYear} By ${config.author}`
    else
      .copyright!= `&copy;${nowYear} By ${config.author}`

  - let work_img = theme.footer.runtime.work_img
  - let work_description = theme.footer.runtime.work_description
  if theme.footer.runtime.enable
    #workboard
      img(src=`${work_img}`, alt=`${work_description}`, title=`${work_description}`, class="workSituationImg boardsign")
      #runtimeTextTip
  if theme.footer.custom_text
    .footer_custom_text!=`${theme.footer.custom_text}`
  if theme.footer.bdageitem.enable
    p#ghbdages
      each item in theme.footer.bdageitem.list
        a.github-badge(target='_blank' href=item.link style='margin-inline:5px' data-title=item.message title=item.message)
          img(src=item.shields alt=item.message)

if theme.footer.footerBar && theme.footer.footerBar.enable
  #footer-bar
    .footer-bar-links
      .footer-bar-left
        #footer-bar-tips
          if theme.footer.owner.enable
            - var now = new Date()
            - var nowYear = now.getFullYear()
            if theme.footer.owner.since && theme.footer.owner.since != nowYear
              .copyright!= `&copy;${theme.footer.owner.since} - ${nowYear} By `
                a.footer-bar-link(href=url_for(config.url) title=config.author target="_blank")=config.author
            else
              .copyright!= `&copy;${nowYear} By ${config.author} `
        #footer-type-tips
        if theme.footer.footerBar && theme.footer.footerBar.typing && theme.footer.footerBar.typing.enable
          - let typingConfig = theme.footer.footerBar.typing
          script(src=url_for(theme.asset.typed))
          script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
          script(src="https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js")
          if typingConfig.source == "1"
            script.
              document.addEventListener("DOMContentLoaded", function() {
                axios.get("https://api.qjqq.cn/api/Yi")
                  .then(function(response) {
                    var hitokotoText = response.data.hitokoto;
                    var typed = new Typed("#footer-type-tips", {
                      strings: [hitokotoText], // 使用接口返回的文本内容作为打字效果的字符串
                      startDelay: parseInt('#{typingConfig.startDelay}'),
                      backDelay: parseInt('#{typingConfig.backDelay}'),
                      typeSpeed: parseInt('#{typingConfig.typeSpeed}'),
                      loop: '#{typingConfig.loop}' === 'true',
                      backSpeed: parseInt('#{typingConfig.backSpeed}')
                    });
                  })
                  .catch(function(error) {
                    console.error("Error fetching data from the API:", error);
                  });
              });
          else if typingConfig.source == "2"
            script.
              document.addEventListener("DOMContentLoaded", function() {
                axios.get("https://v1.hitokoto.cn")
                  .then(function(response) {
                    var hitokotoText = response.data.hitokoto; // 提取接口返回的文本内容
                    var typed = new Typed("#footer-type-tips", {
                      strings: [hitokotoText], // 使用接口返回的文本内容作为打字效果的字符串
                      startDelay: parseInt('#{typingConfig.startDelay}'),
                      backDelay: parseInt('#{typingConfig.backDelay}'),
                      typeSpeed: parseInt('#{typingConfig.typeSpeed}'),
                      loop: '#{typingConfig.loop}' === 'true',
                      backSpeed: parseInt('#{typingConfig.backSpeed}')
                    });
                  })
                  .catch(function(error) {
                    console.error("Error fetching data from the API:", error);
                  });
              });
          else if typingConfig.source == "3"
            script(src="https://sdk.jinrishici.com/v2/browser/jinrishici.js")
            script.
                document.addEventListener("DOMContentLoaded", function() {
                  // 函数用于通过Jinrishici API获取随机诗句
                  function fetchRandomPoem(callback) {
                    // 调用Jinrishici API
                    jinrishici.load(function(result) {
                      // 检查API调用是否成功并且包含诗句数据
                      if (result && result.status === "success" && result.data) {
                        // 提取诗句内容并将其传递给回调函数
                        callback(result.data.content);
                      } else {
                        // 如果出现错误或没有诗句数据，则显示默认消息
                        callback("获取诗句失败，请稍后再试。");
                      }
                    });
                  }

                  // 调用函数获取随机诗句，并使用Typed.js显示出来
                  fetchRandomPoem(function(poemContent) {
                    // 使用获取到的诗句内容初始化Typed.js
                    var typed = new Typed("#footer-type-tips", {
                      strings: [poemContent],
                      startDelay: parseInt('#{typingConfig.startDelay}'),
                      backDelay: parseInt('#{typingConfig.backDelay}'),
                      typeSpeed: parseInt('#{typingConfig.typeSpeed}'),
                      loop: '#{typingConfig.loop}' === 'true',
                      backSpeed: parseInt('#{typingConfig.backSpeed}')
                    });
                  });
                });
          else 
            script.
              document.addEventListener("DOMContentLoaded", function() {
                var configStrings = !{JSON.stringify(typingConfig.strings)};
                var typed = new Typed("#footer-type-tips", {
                  strings: configStrings,
                  startDelay: parseInt('#{typingConfig.startDelay}'),
                  backDelay: parseInt('#{typingConfig.backDelay}'),
                  typeSpeed: parseInt('#{typingConfig.typeSpeed}'),
                  loop: '#{typingConfig.loop}' === 'true',
                  backSpeed: parseInt('#{typingConfig.backSpeed}')
                });
              });
      .footer-bar-right
        each item in theme.footer.footerBar.linkList
          a.footer-bar-link(href=url_for(item.link) title=item.text)=item.text
        if theme.footer.footerBar.cc.enable 
          a.footer-bar-link.cc(href=url_for(theme.footer.footerBar.cc.link) title="cc协议")
            i.anzhiyufont.anzhiyu-icon-copyright-line
            i.anzhiyufont.anzhiyu-icon-creative-commons-by-line
            i.anzhiyufont.anzhiyu-icon-creative-commons-nc-line
            i.anzhiyufont.anzhiyu-icon-creative-commons-nd-line
